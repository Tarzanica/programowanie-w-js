import { Entity } from './entity';
import { Game } from './Game';
import { Query, QueryDef } from './queries';
import { Store } from './stores';
export declare class FrameHandle {
    private handle;
    private game;
    constructor(handle: () => any, game: Game);
    attach(): void;
    detach(): void;
}
export declare class System {
    protected game: Game;
    constructor(game: Game);
    query(queryDef: QueryDef): Query<any>;
    frame(query: Query, run: (entity: Entity) => void): FrameHandle;
    watch(query: Query, stores: Store[], run: (entity: Entity) => void): FrameHandle;
}
export declare type SystemSpec = {
    new (game: Game): System;
};
